@inject IApplicationScopeFactory AppScopeFactory

<GvGrid ColumnCount="6">
    <GvGridItem Span="5">
        <MudTextField Label="@Label"
                      ReadOnly="true"
                      Value="@FeatureClass?.Name"
                      Variant="Variant.Text"></MudTextField>
    </GvGridItem>
    <GvGridItem>
        <MudFab Color="Color.Primary"
                OnClick="SelectFeatureClass"
                StartIcon="@Icons.Material.Filled.More" />
    </GvGridItem>
</GvGrid>

@code {
    [Parameter] public string Label { get; set; } = "FeatureClass";
    [Parameter] public IFeatureClass? FeatureClass { get; set; }
    [Parameter] public EventCallback<IFeatureClass> FeatureClassChanged { get; set; }

    async private Task SelectFeatureClass()
    {
        var model = await AppScopeFactory.ShowKnownDialog(
            Framework.Blazor.KnownDialogs.ExplorerDialog,
            model: new ExplorerDialogModel()
                {
                    Filters = [ new OpenFeatureclassFilter() ],
                    Mode = ExploerDialogMode.Open
                });

        if (model != null && model.Result.ExplorerObjects.Count() == 1)
        {
            FeatureClass = (await model.Result.ExplorerObjects.First().GetInstanceAsync()) as IFeatureClass;

            await FeatureClassChanged.InvokeAsync(FeatureClass);
        }
    }
}