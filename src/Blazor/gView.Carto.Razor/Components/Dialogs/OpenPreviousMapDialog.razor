@inherits ModalDialogFormBase<OpenPreviousMapDialogModel>
@inject SettingsService Settings
@inject IconService IconService

<ModalDialogFormBase T="OpenPreviousMapDialogModel"
                     OnDialogClose="base.OnDialogClose"
                     Model="base.Model">
    <DialogBody>
        @if (Model.Selected is not null)
        {
            <MudProgressCircular Indeterminate="true" Size="MudBlazor.Size.Small" />
            <div>
                @($"Loading {Model.Selected.DisplayPath()} ...")
            </div>  
        } 
        else 
        {
            @foreach(var item in Model.Items ?? [])
            {
                <div class="carto-tile"
                     @onclick="async () => await SelectMapFileItem(item)">
                    <div class="@(IconService.FromString("basic:globe-table")) icon"></div>
                    <div class="title">@item.DisplayPath()</div>
                    <div class="sub-title">@item.LastAccess</div>
                </div>
            }

            <div class="carto-tile"
                 @onclick="async () => await SelectMapFileItem(null)">
                <div class="@(IconService.FromString("basic:globe-table")) icon"></div>
                <div class="title">Other File ...</div>
            </div>
        }
    </DialogBody>
    <DialogButtons>

    </DialogButtons>
</ModalDialogFormBase>
    
  @code {
    async private Task SelectMapFileItem(MapFileItem? item)
    {
        Model.Selected = item;

        await base.ForceRenderComponent();

        await base.Submit();
    }
}