@inherits BaseHandler

@if (_renderer is not null)
{
    <MudPaper Elevation="25" Style="padding:10px;margin:2px">
        <MudText Typo="Typo.h6">Edges</MudText>
        <QuickSymbolPropertiesControl Symbol="_renderer[NetworkRenderer.RendererType.Edges]"
                                      SymbolChanged="(sym) => _renderer[NetworkRenderer.RendererType.Edges] = sym"
                                      Dense="true"
                                      ShowPropertyGrid="false" />
    </MudPaper>

    <MudPaper Elevation="25" Style="padding:10px;margin:2px">
        <MudText Typo="Typo.h6">Simple Nodes</MudText>
        <QuickSymbolPropertiesControl Symbol="_renderer[NetworkRenderer.RendererType.SimpleNodes]"
                                      SymbolChanged="(sym) => _renderer[NetworkRenderer.RendererType.SimpleNodes] = sym"
                                      Dense="true"
                                      ShowPropertyGrid="false" />
    </MudPaper>

    <MudPaper Elevation="25" Style="padding:10px;margin:2px">
        <MudText Typo="Typo.h6">Switches (On)</MudText>
        <QuickSymbolPropertiesControl Symbol="_renderer[NetworkRenderer.RendererType.SwitchesOn]"
                                      SymbolChanged="(sym) => _renderer[NetworkRenderer.RendererType.SwitchesOn] = sym"
                                      Dense="true"
                                      ShowPropertyGrid="false" />
    </MudPaper>

    <MudPaper Elevation="25" Style="padding:10px;margin:2px">
        <MudText Typo="Typo.h6">Switches (Off)</MudText>
        <QuickSymbolPropertiesControl Symbol="_renderer[NetworkRenderer.RendererType.SwitchesOff]"
                                      SymbolChanged="(sym) => _renderer[NetworkRenderer.RendererType.SwitchesOff] = sym"
                                      Dense="true"
                                      ShowPropertyGrid="false" />
    </MudPaper>
}

@code {
    [Parameter] public object? Instance { get; set; }

    private IFeatureLayer? _layer;
    private NetworkRenderer? _renderer;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (Instance is IFeatureLayer fLayer)
        {
            _layer = fLayer;
            _renderer = fLayer.FeatureRenderer as NetworkRenderer;
        }
        else
        {
            _renderer = Instance as NetworkRenderer;
        }
    }
}