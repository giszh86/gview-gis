@using gView.Framework.Data.Filters

@inherits BaseHandler
@inject IApplicationScopeFactory AppScopeFactory

@if(Layer is not null)
{
    <GvCard Title="Definition Query (Filter)">
        <GvCardContent>
            <MudTextField T="string" @ref="_whereClause"
                          Value="Layer.FilterQuery?.WhereClause"
                          OnBlur="ApplyInputValues"
                          Label="Filter Query" 
                          Lines="12"/>
        </GvCardContent>

        <div style="text-align:right;padding:18px">
            <MudButton Color="Color.Primary" Variant="Variant.Filled"
                       OnClick="ShowQueryBuilder">Query Builder</MudButton>
        </div>
        
    </GvCard>    
    <GvCard Title="Render Ordering">
        <GvCardContent>
            <MudTextField T="string" @ref="_orderBy"
                          Value="Layer.FilterQuery?.OrderBy"
                          OnBlur="ApplyInputValues"
                          Label="Order By"
                          Lines="1" />
        </GvCardContent>
    </GvCard>
}

@code {
    [Parameter] public IFeatureLayer? Layer { get; set; }
    private MudTextField<string>? _whereClause;
    private MudTextField<string>? _orderBy;

    private void ApplyInputValues()
        => SetFilterQuery(_whereClause?.Value, _orderBy?.Value);


    private void SetFilterQuery(string? whereClause, string? orderBy)
    {
        if (Layer is not null)
        {
            if (string.IsNullOrWhiteSpace(whereClause) && string.IsNullOrWhiteSpace(orderBy))
            {
                Layer.FilterQuery = null;
                return;
            }

            Layer.FilterQuery ??= new QueryFilter();
            Layer.FilterQuery.WhereClause = whereClause?.Trim();
            Layer.FilterQuery.OrderBy = orderBy?.Trim();
        }
    }

    private Task ShowQueryBuilder() => HandleAsync(async () =>
    {
        var model = await AppScopeFactory.ShowModalDialog(
            typeof(gView.Razor.Dialogs.QueryBuilderDialog),
            "Query Builder",
            new QueryBuilderModel()
            {
                TableClass = Layer?.FeatureClass,
                QueryString = Layer?.FilterQuery?.WhereClause ?? ""
            }
        );

        if (model is not null)
        {
            SetFilterQuery(model.QueryString, _orderBy?.Value);
        }
    });
}