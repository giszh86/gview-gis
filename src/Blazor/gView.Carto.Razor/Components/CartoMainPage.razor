@using gView.Blazor.Core.Services.Abstraction

@inject IScopeContextService ScopeContext
@inject SettingsService Settings
@inject ICartoApplicationScopeService AppScope

<div class="carto-main @(_isDarkMode ? "dark": "light")">
    <MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />

    <MudPaper Class="toolbar" Elevation="2">
        <ToolRibbon ToggleDarkmode="ToggleDarkmode" />
    </MudPaper>
    
    
    <MudPaper Class="toc" Elevation="2">
        <Toc />
    </MudPaper>

    <div class="toc-content-splitter"></div>

    <MudPaper Class="content" Elevation="2">
        <Content />
    </MudPaper>

    <div class="data-content-splitter"></div>

    <MudPaper Class="data" Elevation="2">
        <DataFrame />
    </MudPaper>

    <MudPaper Class="status-bar" Elevation="2">
        <StatusBar />
    </MudPaper>
</div>

<script src="_content/gView.Carto.Razor/js/carto.js"></script>

@code {
    private MudTheme _theme = new();
    private bool _isDarkMode = true;

    private void ToggleDarkmode()
    {
        _isDarkMode = !_isDarkMode;
    }

    async protected override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // Task.Run(async () =>
        // {
        //     await Task.Delay(2000);
            
        // });
    }
}